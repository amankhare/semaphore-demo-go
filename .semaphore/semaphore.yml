version: v1.0
name: build-test-release
agent:
  machine:
    type: s1-prod-ubuntu20-04-arm64-1
    os_image: ''
fail_fast:
  cancel:
    when: 'true'
execution_time_limit:
  hours: 1
queue:
  - when: branch != 'master'
    processing: parallel
global_job_config:
  prologue:
    commands:
      - checkout
blocks:
  - name: Test
    dependencies: []
    run:
      when: 'change_in(''/'', {exclude: [''/.deployed-versions/'', ''.github/'']})'
    task:
      jobs:
        - name: Test
          commands:
            - 'bazel run @confluent_rules//tools:format -- --mode check'
            - bazel coverage //...
      epilogue:
        always:
          commands:
            - TEST_LOG_DIR=$(bazel info bazel-testlogs)
            - test-results publish "$TEST_LOG_DIR"
            - artifact push workflow "$TEST_LOG_DIR"
            - artifact push workflow $(bazel info output_path)/_coverage/_coverage_report.dat
  - name: Release
    dependencies:
      - Test
    run:
      when: branch = 'master'
    task:
      jobs:
        - name: Release
          commands:
            - 'bazel run @confluent_rules//python:bump_version -- patch'
            - 'bazel run //:release --legacy_external_runfiles'
after_pipeline:
  task:
    agent:
      machine:
        type: s1-prod-ubuntu20-04-arm64-0
    jobs:
      - name: Metrics
        commands:
          - emit-ci-metrics -p -a testlogs
      - name: Publish Test Results
        commands:
          - test-results gen-pipeline-report
      - name: SonarQube
        commands:
          - checkout
          - sem-version java 11
          - emit-sonarqube-data
promotions:
  - name: trigger release-tools update
    pipeline_file: trigger-downstream-jobs.yml
    auto_promote:
      when: result = 'passed' and branch = 'master'
